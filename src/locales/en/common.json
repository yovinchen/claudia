{
  "pleaseSelectInstallation": "Select Claude installation",
  "saveSelection": "Save Selection",
  "saving": "Saving...",
  "ccProjects": "CC Projects",
  "browseClaudeCodeSessions": "Browse your Claude Code sessions",
  "newClaudeCodeSession": "New Claude Code session",
  "ccAgents": "Agent Management",
  "mcpServers": "MCP Servers",
  "manageMcpServers": "Manage Model Context Protocol servers",
  "app": {
    "name": "Claudia",
    "welcome": "Welcome to Claudia",
    "tagline": "Powerful Claude Code session management tool",
    "returnHome": "Return to Home",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "create": "Create",
    "update": "Update",
    "remove": "Remove",
    "add": "Add",
    "confirm": "Confirm",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "refresh": "Refresh",
    "close": "Close",
    "open": "Open",
    "page": "Page",
    "of": "of",
    "loading": "Loading...",
    "from": "from",
    "retry": "Retry",
    "model": "Model",
    "projectPath": "Project Path",
    "task": "Task",
    "started": "Started",
    "output": "Output",
    "copyOutput": "Copy Output",
    "copyAsMarkdown": "Copy as Markdown",
    "copyAsJsonl": "Copy as JSONL",
    "close": "Close",
    "systemInitialized": "System Initialized",
    "availableTools": "Available Tools",
    "workingDirectory": "Working Directory",
    "sessionId": "Session ID",
    "mcpServices": "MCP Services",
    "searchingWithGrep": "Searching with grep",
    "searchingForPattern": "Searching for pattern",
    "fileContent": "File content",
    "yesterday": "Yesterday",
    "commands": "Commands",
    "claudeCodeSession": "Claude Code Session",
    "experimentalFeature": "Experimental Feature",
    "checkpointingWarning": "Checkpointing may affect directory structure or cause data loss. Use with caution.",
    "noCheckpointsYet": "No checkpoints yet",
    "sessionTimeline": "Session Timeline",
    "checkpoints": "checkpoints",
    "loadingTimeline": "Loading timeline...",
    "fileExplorer": "File Explorer",
    "searchFiles": "Search files...",
    "copyPath": "Copy Path",
    "openFile": "Open File",
    "addToChat": "Add to Chat",
    "noFilesFound": "No files found",
    "viewMode": "View Mode",
    "editMode": "Edit Mode",
    "saved": "Saved",
    "unsavedChangesConfirm": "You have unsaved changes. Are you sure you want to leave?",
    "gitPanel": "Git",
    "gitChanges": "Changes",
    "expandCurrentFolder": "Expand current folder",
    "expandAllFolders": "Expand all folders",
    "collapseCurrentFolder": "Collapse current folder",
    "collapseAllFolders": "Collapse all folders",
    "ahead": "ahead",
    "behind": "behind",

    "gitStatus": "Status",
    "gitHistory": "History",
    "gitBranches": "Branches",
    "workingTreeClean": "Working tree clean",
    "staged": "Staged",
    "modified": "Modified",
    "untracked": "Untracked",
    "conflicted": "Conflicted",
    "noGitRepository": "No Git repository found",
    "noCommitsFound": "No commits found",
    "noBranchesFound": "No branches found",
    "localBranches": "Local Branches",
    "remoteBranches": "Remote Branches",
    "current": "current",
    "andMore": "... and {{count}} more",
    "filesChanged": "files",
    "justNow": "just now",
    "minutesAgo": "{{count}} minute{{plural}} ago",
    "hoursAgo": "{{count}} hour{{plural}} ago",
    "daysAgo": "{{count}} day{{plural}} ago",
    "loadingOutput": "Loading output...",
    "waitingForOutput": "Waiting for output...",
    "noOutput": "No output available",
    "agentRunningNoOutput": "Agent is running but no output received yet",
    "failedToLoadSessionOutput": "Failed to load session output",
    "outputRefreshed": "Output refreshed",
    "fileABug": "File a bug",
    "failedToRefreshOutput": "Failed to refresh output",
    "loadingAgentRun": "Loading agent run...",
    "agentExecutionCompleted": "Agent execution completed",
    "agentExecutionCancelled": "Agent execution was cancelled",
    "selectProjectFirst": "Please select a project directory first",
    "selectDirectoryFailed": "Failed to select directory: {{message}}"
  },
  "claudeSession": {},
  "navigation": {
    "projects": "CC Projects",
    "agents": "Agent Management",
    "settings": "Settings",
    "usage": "Usage Dashboard",
    "mcp": "MCP Manager",
    "relayStations": "Relay Stations",
    "promptFiles": "CLAUDE.md",
    "about": "About"
  },
  "welcome": {
    "relayStationManagement": "Relay Stations",
    "relayStationManagementDesc": "Manage Claude API relay stations",
    "agentManagement": "Agent Management",
    "agentManagementDesc": "Create and manage intelligent agents",
    "projectManagement": "Project Management",
    "projectManagementDesc": "Browse and manage project sessions",
    "usageStatistics": "Usage Statistics",
    "usageStatisticsDesc": "View usage and statistics",
    "mcpBroker": "MCP Broker",
    "mcpBrokerDesc": "Manage MCP servers",
    "claudeMd": "CLAUDE.md",
    "claudeMdDesc": "Edit Claude configuration files",
    "promptFiles": "CLAUDE.md",
    "promptFilesDesc": "Manage and switch CLAUDE.md files",
    "settings": "Settings",
    "settingsDesc": "App settings and configuration",
    "quickStartSession": "Quick Start New Session",
    "smartQuickStart": "Smart Quick Start",
    "choosePathStart": "Choose Path & Start",
    "creatingSmartSession": "Creating smart session...",
    "ccrRouter": "CCR Router",
    "ccrRouterDesc": "Claude Code Router configuration management"
  },
  "projects": {
    "title": "Projects",
    "noProjects": "No projects found",
    "selectProject": "Select a project",
    "openSession": "Open Session",
    "newSession": "New Session",
    "sessions": "Sessions",
    "noSessions": "No sessions found",
    "lastModified": "Last Modified",
    "sessionHistory": "Session History",
    "sessionCount": "{{count}} sessions"
  },
  "sessions": {
    "firstMessage": "First message:",
    "hasTodo": "Has todo"
  },
  "runningSessions": {
    "title": "Active Claude Sessions",
    "countRunning": "({{count}} running)",
    "running": "Running",
    "resume": "Resume",
    "loadFailed": "Failed to load running sessions"
  },
  "widgets": {
    "terminal": { "title": "Terminal" },
    "common": { "running": "Running..." },
    "bash": {
      "commandFailed": "Command failed",
      "commandCompleted": "Command completed"
    }
  },
  "agents": {
    "title": "Agent Management",
    "newAgent": "New Agent",
    "createAgent": "Create Agent",
    "editAgent": "Edit Agent",
    "deleteAgent": "Delete Agent",
    "executeAgent": "Execute Agent",
    "execute": "Execute",
    "readyToExecute": "Ready to Execute",
    "task": "Task",
    "enterTask": "Enter the task for the agent",
    "hooks": "Hooks",
    "configureHooks": "Configure Hooks",
    "configureHooksDesc": "Configure hooks that run before, during, and after tool executions. Changes are saved immediately.",
    "projectSettings": "Project Settings",
    "localSettings": "Local Settings",
    "initializing": "Initializing agent...",
    "exportToFile": "Export agent to .claudia.json",
    "fullscreen": "Fullscreen",
    "stop": "Stop",
    "agentName": "Agent Name",
    "agentNameRequired": "Agent name is required",
    "agentIcon": "Agent Icon",
    "chooseAnIcon": "Choose an icon",
    "searchIcons": "Search icons...",
    "noIconsFound": "No icons found for",
    "clickToSelect": "Click an icon to select",
    "iconsAvailable": "icons available",
    "iconCategories": {
      "interfaceNavigation": "Interface & Navigation",
      "developmentTech": "Development & Tech",
      "businessFinance": "Business & Finance",
      "creativeDesign": "Creative & Design",
      "natureScience": "Nature & Science",
      "gamingEntertainment": "Gaming & Entertainment",
      "communication": "Communication",
      "miscellaneous": "Miscellaneous"
    },
    "systemPrompt": "System Prompt",
    "systemPromptRequired": "System prompt is required",
    "defaultTask": "Default Task",
    "model": "Model",
    "projectPath": "Project Path",
    "selectProjectPath": "Select or enter project path",
    "permissions": "Permissions",
    "fileAccess": "File Access",
    "networkAccess": "Network Access",
    "noAgents": "No agents found",
    "agentCreated": "Agent created successfully",
    "agentUpdated": "Agent updated successfully",
    "agentDeleted": "Agent deleted successfully",
    "confirmDelete": "Are you sure you want to delete this agent?",
    "executionHistory": "Execution History",
    "runAgent": "Run Agent",
    "agentRuns": "Agent Runs",
    "createAgentDescription": "Create a new Claude Code agent",
    "updateAgentDescription": "Update your Claude Code agent",
    "createFailed": "Failed to create agent",
    "updateFailed": "Failed to update agent",
    "basicInformation": "Basic Information",
    "optional": "Optional",
    "sonnetName": "Claude 4 Sonnet",
    "sonnetDescription": "Faster, efficient for most tasks",
    "opusName": "Claude 4.1 Opus",
    "opusDescription": "More capable, better for complex tasks",
    "opusPlanName": "Opus Plan Mode",
    "opusPlanDescription": "Use Opus 4.1 for planning, Sonnet 4 otherwise",
    "defaultTaskDescription": "This will be used as the default task placeholder when executing the agent",
    "systemPromptDescription": "Define the behavior and capabilities of your CC Agent",
    "manageAgents": "Manage your Claude Code agents",
    "noAgentsYet": "No agents yet",
    "createFirstAgent": "Create your first CC Agent to get started",
    "created": "Created",
    "execute": "Execute",
    "readyToExecute": "Ready to Execute",
    "enterTask": "Enter the task for the agent",
    "hooks": "Hooks",
    "configureHooks": "Configure Hooks",
    "fullscreen": "Fullscreen",
    "stop": "Stop",
    "selectProjectPathAndTask": "Select a project path and enter a task to run the agent",
    "noExecutionHistory": "No execution history yet",
    "agentRunningWarning": "An agent is currently running. If you navigate away, the agent will continue running in the background. You can view running sessions in the 'Running Sessions' tab within CC Agents.\n\nDo you want to continue?",
    "export": "Export",
    "import": "Import",
    "importFromFile": "From File",
    "importFromGitHub": "From GitHub",
    "recentExecutions": "Recent Executions",
    "exportedSuccessfully": "Agent \"{{name}}\" exported successfully",
    "exportFailed": "Failed to export agent",
    "importedSuccessfully": "Agent imported successfully",
    "importFailed": "Failed to import agent",
    "importFromGitHubSuccess": "Agent imported successfully from GitHub",
    "executeAgentTitle": "Execute agent",
    "deleteAgentTitle": "Delete Agent",
    "deleteConfirmation": "Are you sure you want to delete the agent \"{{name}}\"? This action cannot be undone and will permanently remove the agent and all its associated data.",
    "deleting": "Deleting...",
    "deleteAgentButton": "Delete Agent",
    "statusCompleted": "Completed",
    "statusRunning": "Running", 
    "statusFailed": "Failed",
    "statusPending": "Pending",
    "loadAgentsFailed": "Failed to load agents",
    "deleteFailed": "Failed to delete agent",
    "created": "Created",
    "noAgentsYet": "No agents yet",
    "createFirstAgent": "Create your first agent to get started",
    "manageAgents": "Create and manage your AI agents",
    "agentManagement": "Agent Management",
    "createNewOrManageAgents": "Create new agents or manage running agent executions",
    "noAgentsAvailable": "No agents available",
    "availableAgents": "Available Agents",
    "runningAgents": "Running Agents",
    "createFirstAgentToGetStarted": "Create your first agent to get started",
    "noRunningAgents": "No running agents",
    "agentExecutionsWillAppear": "Agent executions will appear here when started",
    "view": "View"
  },
  "slashCommands": {
    "slashCommands": "Slash Commands",
    "globalSearch": "Global Search",
    "searching": "Searching",
    "projectSlashCommands": "Project Slash Commands",
    "createCustomCommandsProject": "Create custom commands for this project",
    "createCustomCommandsWorkflow": "Create custom commands to streamline your workflow",
    "newCommand": "New Command",
    "allCommands": "All Commands",
    "project": "Project",
    "user": "User",
    "userCommands": "User Commands",
    "projectCommands": "Project Commands",
    "commands": "Commands",
    "manageProjectCommands": "Manage project-specific slash commands for",
    "noCommandsFound": "No commands found",
    "noProjectCommandsYet": "No project commands created yet",
    "noCommandsYet": "No commands created yet",
    "createFirstProjectCommand": "Create your first project command",
    "createFirstCommand": "Create your first command"
  },
  "promptFiles": {
    "title": "CLAUDE.md",
    "description": "Manage and switch CLAUDE.md files",
    "create": "New",
    "createFile": "Create Prompt File",
    "editFile": "Edit Prompt File",
    "deleteFile": "Delete Prompt File",
    "fileName": "File Name",
    "fileDescription": "Description",
    "fileContent": "File Content",
    "tags": "Tags",
    "addTag": "Add Tag",
    "currentActive": "Currently Active",
    "allFiles": "All Prompt Files",
    "noFiles": "No prompt files yet",
    "noFilesDesc": "Create your first prompt file template",
    "createFirst": "Create First Prompt File",
    "useFile": "Use This File",
    "viewContent": "View Content",
    "deactivate": "Deactivate",
    "applySuccess": "Applied to",
    "applyFailed": "Apply Failed",
    "createSuccess": "Created Successfully",
    "createFailed": "Create Failed",
    "updateSuccess": "Updated Successfully",
    "updateFailed": "Update Failed",
    "deleteSuccess": "Deleted Successfully",
    "deleteFailed": "Delete Failed",
    "deleteConfirm": "Are you sure you want to delete this prompt file? This action cannot be undone.",
    "importFromClaudeMd": "Import from CLAUDE.md",
    "importFromClaudeMdDesc": "Import the current project's CLAUDE.md file as a prompt template",
    "importSuccess": "Imported Successfully",
    "importFailed": "Import Failed",
    "nameRequired": "File name is required",
    "contentRequired": "File content is required",
    "preview": "Preview",
    "edit": "Edit",
    "inUse": "In Use",
    "applyToCustomPath": "Apply to Custom Path",
    "applyToCustomPathFailed": "Apply to Custom Path Failed",
    "lastUsed": "Last Used",
    "createdAt": "Created At",
    "updatedAt": "Updated At",
    "syncToClaudeDir": "Sync to .claude",
    "syncing": "Syncing...",
    "syncSuccess": "Synced to {{path}}",
    "syncFailed": "Sync Failed"
  },
  "hooks": {
    "hooksConfiguration": "Hooks Configuration",
    "configureShellCommands": "Configure shell commands to execute at various points in Claude Code's lifecycle.",
    "localSettingsNote": " These settings are not committed to version control.",
    "unsavedChanges": "You have unsaved changes. Click Save to persist them.",
    "preToolUse": "Pre Tool Use",
    "postToolUse": "Post Tool Use",
    "notification": "Notification",
    "stop": "Stop",
    "subagentStop": "Subagent Stop",
    "runsBeforeToolCalls": "Runs before tool calls, can block and provide feedback",
    "runsAfterToolCompletion": "Runs after successful tool completion",
    "customizesNotifications": "Customizes notifications when Claude needs attention",
    "runsWhenClaudeFinishes": "Runs when Claude finishes responding",
    "runsWhenSubagentFinishes": "Runs when a Claude subagent (Task) finishes",
    "noHooksConfigured": "No hooks configured for this event",
    "userScope": "User Scope",
    "projectScope": "Project Scope",
    "localScope": "Local Scope",
    "templates": "Templates",
    "addHook": "Add Hook",
    "addAnotherMatcher": "Add Another Matcher",
    "addAnotherCommand": "Add Another Command",
    "pattern": "Pattern",
    "commonPatterns": "Common patterns",
    "commands": "Commands",
    "addCommand": "Add Command",
    "hookTemplates": "Hook Templates",
    "quickStartTemplates": "Quick start with preconfigured templates",
    "validationErrors": "Validation Errors",
    "securityWarnings": "Security Warnings",
    "saving": "Saving...",
    "save": "Save",
    "loadingHooksConfiguration": "Loading hooks configuration...",
    "toolNamePatternTooltip": "Tool name pattern (regex supported). Leave empty to match all tools.",
    "seconds": "seconds",
    "timeout": "Timeout",
    "command": "Command",
    "block": "Block",
    "addCondition": "Add Condition",
    "condition": "Condition",
    "matchesRegex": "Matches regex",
    "message": "Message",
    "enterShellCommand": "Enter shell command...",
    "projectHooks": "Project Hooks",
    "localHooks": "Local Hooks"
  },
  "projectSettings": {
    "gitignoreLocalWarning": "Local settings file is not in .gitignore",
    "addToGitignore": "Add to .gitignore"
  },
  "settings": {
    "title": "Settings",
    "general": "General",
    "appearance": "Appearance",
    "language": "Language",
    "theme": "Theme",
    "checkpointSettings": "Checkpoint Settings",
    "autoCheckpoint": "Auto Checkpoint",
    "checkpointInterval": "Checkpoint Interval",
    "maxCheckpoints": "Max Checkpoints",
    "proxySettings": "Proxy Settings",
    "enableProxy": "Enable Proxy",
    "httpProxy": "HTTP Proxy",
    "httpsProxy": "HTTPS Proxy",
    "noProxy": "No Proxy",
    "analyticsConsent": "Analytics Consent",
    "enableAnalytics": "Enable Analytics",
    "disableAnalytics": "Disable Analytics",
    "configurePreferences": "Configure Claude Code preferences",
    "generalSettings": "General Settings",
    "permissionsTab": "Permissions",
    "environmentTab": "Environment",
    "advancedTab": "Advanced",
    "hooksTab": "Hooks",
    "commands": "Commands",
    "storage": "Storage",
    "proxy": "Proxy",
    "analyticsTab": "Analytics",
    "proxySettingsTitle": "Proxy Settings",
    "proxySettingsDesc": "Configure proxy settings for Claude API requests",
    "enableProxyDesc": "Use proxy for all Claude API requests",
    "noProxyDesc": "Comma-separated list of hosts that should bypass the proxy",
    "allProxyDesc": "Proxy URL to use for all protocols if protocol-specific proxies are not set",
    "proxySettingsSaved": "Proxy settings saved and applied successfully.",
    "loadProxySettingsFailed": "Failed to load proxy settings",
    "saveProxySettingsFailed": "Failed to save proxy settings",
    "themeSelector": {
      "selectATheme": "Select a theme",
      "dark": "Dark",
      "gray": "Gray",
      "light": "Light",
      "custom": "Custom",
      "choosePreferredTheme": "Choose your preferred color theme for the interface"
    },
    "customTheme": {
      "title": "Custom Theme Colors",
      "background": "Background",
      "foreground": "Foreground",
      "primary": "Primary",
      "card": "Card",
      "accent": "Accent",
      "destructive": "Destructive",
      "colorValuesDesc": "Use CSS color values (hex, rgb, oklch, etc.). Changes apply immediately."
    },
    "generalOptions": {
      "includeCoAuthor": "Include \"Co-authored by Claude\"",
      "includeCoAuthorDesc": "Add Claude attribution to git commits and pull requests",
      "verboseOutput": "Verbose Output",
      "verboseOutputDesc": "Show full bash and command outputs",
      "chatRetention": "Chat Transcript Retention (days)",
      "chatRetentionDesc": "How long to retain chat transcripts locally (default: 30 days)",
      "claudeCodeInstallation": "Claude Code Installation",
      "choosePreferredInstallation": "Choose your preferred Claude Code installation.",
      "loadingAvailableInstallations": "Loading available installations...",
      "errorLoadingInstallations": "Error loading installations",
      "availableInstallations": "Available Installations",
      "claudeCodeInstallationDesc": "Select which Claude Code installation to use.",
      "binaryPathChanged": "⚠️ Claude binary path has been changed. Remember to save your settings."
    },
    "placeholders": {
      "envVarKey": "KEY",
      "envVarValue": "value",
      "allowRuleExample": "e.g., Bash(npm run test:*)",
      "denyRuleExample": "e.g., Bash(curl:*)",
      "apiKeyHelperPath": "/path/to/generate_api_key.sh"
    },
    "system": "System",
    "custom": "Custom",
    "systemInstallations": "System Installations",
    "customInstallations": "Custom Installations",
    "selectedInstallation": "Selected Installation",
    "path": "Path",
    "source": "Source",
    "version": "Version",
    "versionUnknown": "Version unknown",
    "permissions": {
      "permissionRules": "Permission Rules",
      "permissionRulesDesc": "Control which tools Claude Code can use without manual approval",
      "allowRules": "Allow Rules",
      "denyRules": "Deny Rules",
      "addRule": "Add Rule",
      "noAllowRules": "No allow rules configured. Claude will ask for approval for all tools.",
      "noDenyRules": "No deny rules configured.",
      "examples": "Examples:",
      "exampleBash": "Allow all bash commands",
      "exampleExactCommand": "Allow exact command",
      "examplePrefix": "Allow commands with prefix",
      "exampleReadFile": "Allow reading specific file",
      "exampleEditDir": "Allow editing files in docs directory"
    },
    "environment": {
      "environmentVariables": "Environment Variables",
      "environmentVariablesDesc": "Environment variables applied to every Claude Code session",
      "addVariable": "Add Variable",
      "noEnvironmentVariables": "No environment variables configured.",
      "commonVariables": "Common variables:",
      "telemetryDesc": "Enable/disable telemetry (0 or 1)",
      "modelDesc": "Custom model name",
      "costWarningsDesc": "Disable cost warnings (1)"
    },
    "advanced": {
      "advancedSettings": "Advanced Settings",
      "advancedSettingsDesc": "Additional configuration options for advanced users",
      "apiKeyHelper": "API Key Helper Script",
      "apiKeyHelperDesc": "Custom script to generate auth values for API requests",
      "rawSettings": "Raw Settings (JSON)",
      "rawSettingsDesc": "This shows the raw JSON that will be saved to ~/.claude/settings.json"
    },
    "hooks": {
      "userHooks": "User Hooks",
      "userHooksDesc": "Configure hooks that apply to all Claude Code sessions for your user account. These are stored in ~/.claude/settings.json"
    },
    "analytics": {
      "analyticsSettings": "Analytics Settings",
      "enableAnalytics": "Enable Analytics",
      "enableAnalyticsDesc": "Help improve Claudia by sharing anonymous usage data",
      "privacyProtected": "Your privacy is protected",
      "noPersonalInfo": "No personal information is collected",
      "noFileContents": "No file contents, paths, or project names",
      "anonymousData": "All data is anonymous with random IDs",
      "canDisable": "You can disable analytics at any time",
      "whatWeCollect": "What we collect:",
      "featureUsage": "Feature usage patterns",
      "performanceMetrics": "Performance metrics",
      "errorReports": "Error reports (without sensitive data)",
      "sessionFrequency": "Session frequency and duration",
      "deleteAllData": "Delete All Analytics Data",
      "analyticsEnabled": "Analytics enabled",
      "analyticsDisabled": "Analytics disabled",
      "allDataDeleted": "All analytics data deleted",
      "helpImproveClaudia": "Help improve Claudia",
      "collectAnonymousData": "We collect anonymous usage data to improve your experience. No personal data is collected.",
      "featureUsageDesc": "Feature usage (which tools and commands you use)",
      "performanceMetricsDesc": "Performance metrics (app speed and reliability)",
      "errorReportsDesc": "Error reports (to fix bugs and improve stability)",
      "usagePatternsDesc": "General usage patterns (session frequency and duration)",
      "noApiKeys": "No API keys or sensitive data",
      "canOptOut": "You can opt-out anytime in Settings",
      "dataHelpsUs": "This data helps us understand which features are most valuable, identify performance issues, and prioritize improvements. Your choice won't affect any functionality.",
      "noThanks": "No Thanks",
      "allowAnalytics": "Allow Analytics"
    },
    "saveButton": {
      "saving": "Saving...",
      "saveSettings": "Save Settings",
      "settingsSavedSuccess": "Settings saved successfully!",
      "settingsSaveFailed": "Failed to save settings"
    },
    "messages": {
      "loadFailed": "Failed to load settings. Please ensure ~/.claude directory exists.",
      "saveFailed": "Failed to save settings."
    },
    "placeholders": {
      "envVarKey": "KEY",
      "envVarValue": "value",
      "allowRuleExample": "e.g., Bash(npm run test:*)",
      "denyRuleExample": "e.g., Bash(curl:*)",
      "apiKeyHelperPath": "/path/to/generate_api_key.sh"
    },
    "modelMappings": {
      "title": "Model alias mappings",
      "description": "Configure actual model versions for aliases (sonnet, opus, haiku)",
      "loadFailed": "Failed to load model mappings",
      "saved": "Model mappings saved",
      "saveFailed": "Failed to save model mappings",
      "emptyTitle": "No model mappings configured",
      "emptySubtitle": "Database may not be initialized yet. Try restarting the app.",
      "changedNotice": "Model mappings changed. Click Save to apply.",
      "note": "Note:",
      "noteContent": "Agents using aliases will resolve to configured versions. For example, sonnet → claude-sonnet-4-20250514.",
      "aliasDescriptions": {
        "sonnet": "Balanced model for most tasks",
        "opus": "Most capable flagship model for complex tasks",
        "haiku": "Fast, lightweight model"
      }
    }
  },
  "ccr": {
    "loadStatusFailed": "Failed to load CCR service status: {{error}}",
    "startFailed": "Failed to start CCR service: {{error}}",
    "stopFailed": "Failed to stop CCR service: {{error}}",
    "restartFailed": "Failed to restart CCR service: {{error}}",
    "serviceStarting": "Service not running, starting...",
    "serviceStartFailed": "Service failed to start",
    "openingUI": "Opening CCR UI...",
    "openUIFailed": "Failed to open CCR UI: {{error}}",
    "openingAdmin": "Opening CCR admin...",
    "openAdminFailed": "Failed to open admin UI: {{error}}"
  },
  "claudeSession": {
    "scrollToTop": "Scroll to top",
    "scrollToBottom": "Scroll to bottom",
    "startFileWatch": "Start file watching",
    "stopFileWatch": "Stop file watching"
  },
  "mcp": {
    "title": "MCP Server Management",
    "servers": "Servers",
    "addServer": "Add Server",
    "serverName": "Server Name",
    "serverCommand": "Server Command",
    "serverArgs": "Server Arguments",
    "testConnection": "Test Connection",
    "connectionSuccess": "Connection successful",
    "connectionFailed": "Connection failed",
    "importFromClaude": "Import from Claude Desktop",
    "exportConfig": "Export Configuration",
    "noServers": "No MCP servers configured",
    "importExport": "Import & Export",
    "importExportDescription": "Import MCP servers from other sources or export your configuration",
    "importScope": "Import Scope",
    "localProjectOnly": "Local (this project only)",
    "projectShared": "Project (shared via .mcp.json)",
    "userAllProjects": "User (all projects)",
    "chooseImportLocation": "Choose where to save imported servers from JSON files",
    "importFromClaudeDesktop": "Import from Claude Desktop",
    "importFromClaudeDesktopDescription": "Automatically imports all MCP servers from Claude Desktop. Installs to user scope (available across all projects).",
    "importing": "Importing...",
    "exporting": "Exporting...",
    "importFromJSON": "Import from JSON",
    "importFromJSONDescription": "Import server configuration from a JSON file",
    "chooseJSONFile": "Choose JSON File",
    "exportConfiguration": "Export Configuration",
    "exportConfigurationDescription": "Export your MCP server configuration",
    "exportComingSoon": "Export (Coming Soon)",
    "useClaudeCodeAsMCPServer": "Use Claude Code as MCP Server",
    "useClaudeCodeAsMCPServerDescription": "Start Claude Code as an MCP server that other applications can connect to",
    "startMCPServer": "Start MCP Server",
    "jsonFormatExamples": "JSON Format Examples",
    "singleServer": "Single server",
    "multipleServers": "Multiple servers (.mcp.json format)",
    "environmentVariablesCount": "Environment variables: {{count}}",
    "serversCount": "{{count}} servers configured",
    "mcpServerAdded": "MCP server added successfully!",
    "serverRemovedSuccess": "Server \"{{name}}\" removed successfully!",
    "importedServersSuccess": "Successfully imported {{count}} servers!",
    "importedServersFailed": "Imported {{imported}} servers, {{failed}} failed",
    "loadMcpServersFailed": "Failed to load MCP servers. Make sure Claude Code is installed.",
    "addMcpServer": "Add MCP Server",
    "configureNewMcpServer": "Configure a new Model Context Protocol server",
    "serverNameRequired": "Server name is required",
    "commandRequired": "Command is required",
    "urlRequired": "URL is required",
    "failedToAddServer": "Failed to add server",
    "environmentVariables": "Environment Variables",
    "addVariable": "Add Variable",
    "command": "Command",
    "argumentsOptional": "Arguments (optional)",
    "scope": "Scope",
    "localProjectOnly": "Local (this project only)",
    "projectSharedViaMcp": "Project (shared via .mcp.json)",
    "addingServer": "Adding Server...",
    "addStdioServer": "Add Stdio Server",
    "url": "URL",
    "addSseServer": "Add SSE Server",
    "exampleCommands": "Example Commands",
    "uniqueNameToIdentify": "A unique name to identify this server",
    "commandToExecuteServer": "The command to execute the server",
    "spaceSeparatedArgs": "Space-separated command arguments",
    "sseEndpointUrl": "The SSE endpoint URL",
    "running": "Running",
    "showFull": "Show full",
    "hide": "Hide",
    "copied": "Copied!",
    "copy": "Copy",
    "arguments": "Arguments",
    "configuredServers": "Configured Servers",
    "serversConfigured": "configured",
    "refresh": "Refresh",
    "noMcpServersConfigured": "No MCP servers configured",
    "addServerToGetStarted": "Add a server to get started with Model Context Protocol",
    "localProjectSpecific": "Local (Project-specific)",
    "projectSharedMcp": "Project (Shared via .mcp.json)",
    "userAllProjects": "User (All projects)"
  },
  "usage": {
    "title": "Usage Dashboard",
    "totalTokens": "Total Tokens",
    "totalCost": "Total Cost",
    "byModel": "By Model",
    "byProject": "By Project",
    "last24Hours": "Last 24 Hours",
    "last7Days": "Last 7 Days",
    "last30Days": "Last 30 Days",
    "allTime": "All Time",
    "exportData": "Export Data",
    "todayRequests": "Today's Requests",
    "todayCost": "Today's Cost",
    "todayTokens": "Today's Tokens",
    "usageDashboardTitle": "Usage Dashboard",
    "trackUsageAndCosts": "Track your Claude Code usage and costs",
    "allTime": "All Time",
    "totalCost": "Total Cost",
    "totalSessions": "Total Sessions",
    "totalTokens": "Total Tokens",
    "avgCostPerSession": "Avg Cost/Session",
    "overview": "Overview",
    "details": "Details",
    "tokenBreakdown": "Token Breakdown",
    "inputTokens": "Input Tokens",
    "outputTokens": "Output Tokens",
    "cacheWrite": "Cache Write",
    "cacheRead": "Cache Read",
    "mostUsedModels": "Most Used Models",
    "topProjects": "Top Projects",
    "sessions": "sessions",
    "usageByModel": "Usage by Model",
    "usageByProject": "Usage by Project",
    "usageBySession": "Usage by Session",
    "dailyUsage": "Daily Usage",
    "tokens": "tokens",
    "models": "models",
    "input": "Input",
    "output": "Output",
    "session": "session",
    "loadingUsageStats": "Loading usage statistics...",
    "failedToLoadUsageStats": "Failed to load usage statistics. Please try again.",
    "tryAgain": "Try Again",
    "dailyUsageOverTime": "Daily Usage Over Time",
    "hourlyUsageToday": "24-Hour Usage Pattern",
    "last24HoursPattern": "Last 24 Hours Usage Pattern",
    "noUsageData": "No usage data available for the selected period",
    "avgProjectCost": "Average Project Cost",
    "topProjectCost": "Highest Project Cost",
    "projectCostDistribution": "Project Cost Distribution",
    "projectTokenUsage": "Project Token Usage",
    "projectDetails": "Project Details",
    "noProjectData": "No project data available",
    "project": "Project",
    "cost": "Cost",
    "requests": "Requests",
    "times": "times",
    "lastUsed": "Last Used",
    "markdownEditorTitle": "Markdown Editor",
    "editSystemPrompt": "Edit your Claude Code system prompt",
    "claudemdFile": "CLAUDE.md file",
    "loadClaudemdFailed": "Failed to load CLAUDE.md file",
    "saveClaudemdFailed": "Failed to save CLAUDE.md file",
    "claudemdSavedSuccess": "CLAUDE.md saved successfully",
    "saveClaudemd": "Save CLAUDE.md",
    "unsavedChangesConfirm": "You have unsaved changes. Are you sure you want to leave?",
    "servers": "Servers",
    "addServer": "Add Server",
    "importExport": "Import/Export",
    "mcpServerAdded": "MCP server added successfully!",
    "serverRemovedSuccess": "Server \"{{name}}\" removed successfully!",
    "importedServersSuccess": "Successfully imported {{count}} server{{plural}}!",
    "importedServersFailed": "Imported {{imported}} server{{importedPlural}}, {{failed}} failed",
    "loadMcpServersFailed": "Failed to load MCP servers. Make sure Claude Code is installed.",
    "addMcpServer": "Add MCP Server",
    "configureNewMcpServer": "Configure a new Model Context Protocol server",
    "serverNameRequired": "Server name is required",
    "commandRequired": "Command is required",
    "urlRequired": "URL is required",
    "failedToAddServer": "Failed to add server",
    "environmentVariables": "Environment Variables",
    "addVariable": "Add Variable",
    "serverName": "Server Name",
    "command": "Command",
    "argumentsOptional": "Arguments (optional)",
    "scope": "Scope",
    "localProjectOnly": "Local (this project only)",
    "projectSharedViaMcp": "Project (shared via .mcp.json)",
    "userAllProjects": "User (all projects)",
    "addingServer": "Adding Server...",
    "addStdioServer": "Add Stdio Server",
    "url": "URL",
    "addSseServer": "Add SSE Server",
    "exampleCommands": "Example Commands",
    "uniqueNameToIdentify": "A unique name to identify this server",
    "commandToExecuteServer": "The command to execute the server",
    "spaceSeparatedArgs": "Space-separated command arguments",
    "sseEndpointUrl": "The SSE endpoint URL",
    "running": "Running",
    "showFull": "Show full",
    "hide": "Hide",
    "copied": "Copied!",
    "copy": "Copy",
    "arguments": "Arguments",
    "environmentVariables": "Environment Variables",
    "configuredServers": "Configured Servers",
    "serversConfigured": "configured",
    "refresh": "Refresh",
    "noMcpServersConfigured": "No MCP servers configured",
    "addServerToGetStarted": "Add a server to get started with Model Context Protocol",
    "localProjectSpecific": "Local (Project-specific)",
    "projectSharedMcp": "Project (Shared via .mcp.json)",
    "userAllProjects": "User (All projects)"
  },
  "messages": {
    "welcomeToClaudia": "Welcome to Claudia",
    "backToHome": "Back to Home",
    "noProjectsFound": "No projects found in ~/.claude/projects",
    "failedToLoadProjects": "Failed to load projects. Please ensure ~/.claude directory exists.",
    "failedToLoadSessions": "Failed to load sessions for this project.",
    "claudeBinaryPathSaved": "Claude binary path saved successfully",
    "selectClaudeCodeInstallation": "Select Claude Code Installation",
    "multipleInstallationsFound": "Multiple Claude Code installations were found on your system. Please select which one you'd like to use.",
    "claudeCodeNotFoundDialog": "Claude Code was not found in any of the common installation locations. Please install Claude Code to continue.",
    "searchedLocations": "Searched locations",
    "installationTip": "You can install Claude Code using",
    "searchingInstallations": "Searching for Claude installations...",
    "installationGuide": "Installation Guide",
    "validating": "Validating...",
    "saveSelection": "Save Selection",
    "noInstallationsFound": "No Installations Found",
    "pleaseSelectInstallation": "Please select a Claude installation",
    "fileSavedSuccess": "File saved successfully",
    "saveFileFailed": "Failed to save file",
    "loadFileFailed": "Failed to load CLAUDE.md file",
    "editProjectSpecificPrompt": "Edit project-specific Claude Code system prompt",
    "maximumTabsReached": "Maximum number of tabs ({{max}}) reached",
    "saving": "Saving...",
    "saveSuccess": "Saved successfully",
    "deleteSuccess": "Deleted successfully",
    "operationFailed": "Operation failed",
    "confirmAction": "Are you sure you want to perform this action?",
    "unsavedChanges": "You have unsaved changes",
    "networkError": "Network error occurred",
    "unknownError": "Unknown error occurred",
    "claudeCodeNotFound": "Claude Code not found",
    "selectClaudeInstallation": "Select Claude Installation",
    "installClaudeCode": "Install Claude Code",
    "smartSessionCreated": "Smart session '{{name}}' is ready to use.",
    "smartSessionDefaultToast": "Smart session '{{name}}' is ready to use.",
    "smartSessionDefaultTitle": "Smart Session",
    "failedToCreateSmartSession": "Failed to create smart session: {{error}}",
    "failedToCreateSmartSessionFallback": "Failed to create smart session: {{error}}",
    "noTabsOpen": "No tabs open",
    "clickPlusToStartChat": "Click the + button to start a new chat",
    "noAgentRunIdSpecified": "No agent run ID specified",
    "noClaudeFileIdSpecified": "No Claude file ID specified",
    "claudeFileEditorNotImplemented": "Claude file editor not yet implemented in tabs",
    "noAgentDataSpecified": "No agent data specified",
    "importAgentComingSoon": "Import agent functionality coming soon...",
    "unknownTabType": "Unknown tab type",
    "letClaudeDecide": "Let Claude decide",
    "basicReasoning": "Basic reasoning",
    "deeperAnalysis": "Deeper analysis",
    "extensiveReasoning": "Extensive reasoning",
    "maximumAnalysis": "Maximum analysis",
    "thinking": "Thinking",
    "auto": "Auto",
    "think": "Think",
    "thinkHard": "Think Hard",
    "thinkHarder": "Think Harder",
    "ultrathink": "Ultrathink",
    "typeYourPromptHere": "Type your prompt here...",
    "dropImagesHere": "Drop images here...",
    "askClaudeAnything": "Ask Claude anything...",
    "usage": "Usage",
    "mcpServersTitle": "MCP Servers",
    "claudemdTitle": "CLAUDE.md",
    "runAgent": "Run: {{name}}",
    "createAgent": "Create Agent",
    "importAgent": "Import Agent",
    "unsavedChangesCloseConfirm": "Tab \"{{title}}\" has unsaved changes. Close anyway?",
    "session": "Session"
  },
  "checkpoint": {
    "title": "Checkpoints",
    "createCheckpoint": "Create Checkpoint",
    "restoreCheckpoint": "Restore Checkpoint",
    "deleteCheckpoint": "Delete Checkpoint",
    "checkpointName": "Checkpoint Name",
    "checkpointMessage": "Checkpoint Message",
    "timeline": "Timeline",
    "diff": "Diff",
    "noCheckpoints": "No checkpoints found",
    "checkpointSettingsTitle": "Checkpoint Settings",
    "experimentalFeature": "Experimental Feature",
    "checkpointWarning": "Checkpointing may affect directory structure or cause data loss. Use with caution.",
    "createCheckpointDesc": "Save the current state of your session with an optional description.",
    "descriptionOptional": "Description (optional)",
    "descriptionPlaceholder": "e.g., Before major refactoring",
    "current": "Current",
    "restoreToThis": "Restore to this checkpoint",
    "forkFromThis": "Fork from this checkpoint",
    "compareWithAnother": "Compare with another checkpoint",
    "checkpointComparison": "Checkpoint Comparison",
    "modifiedFiles": "Modified Files",
    "addedFiles": "Added Files",
    "deletedFiles": "Deleted Files",
    "noPrompt": "No prompt",
    "automaticCheckpoints": "Automatic Checkpoints",
    "automaticCheckpointsDesc": "Automatically create checkpoints based on the selected strategy",
    "checkpointStrategy": "Checkpoint Strategy",
    "manualOnly": "Manual Only",
    "afterEachPrompt": "After Each Prompt",
    "afterToolUse": "After Tool Use",
    "smart": "Smart (Recommended)",
    "manualOnlyDesc": "Checkpoints will only be created manually",
    "afterEachPromptDesc": "A checkpoint will be created after each user prompt",
    "afterToolUseDesc": "A checkpoint will be created after each tool use",
    "smartDesc": "Checkpoints will be created after destructive operations",
    "saving": "Saving...",
    "saveSettings": "Save Settings",
    "storageManagement": "Storage Management",
    "totalCheckpoints": "Total checkpoints",
    "keepRecentCheckpoints": "Keep Recent Checkpoints",
    "cleanUp": "Clean Up",
    "removeOldCheckpoints": "Remove old checkpoints, keeping only the most recent {{count}}",
    "checkpointSettingsFailed": "Failed to load checkpoint settings",
    "saveCheckpointSettingsFailed": "Failed to save checkpoint settings",
    "cleanupCheckpointsFailed": "Failed to cleanup checkpoints",
    "removedOldCheckpoints": "Removed {{count}} old checkpoints"
  },
  "searchProjects": "Search projects...",
  "showingResults": "Showing results",
  "totalProjects": "Total projects",
  "noSearchResults": "No search results",
  "noProjectsMatchSearch": "No projects match your search for",
  "clearSearch": "Clear search",
  "placeholders": {
    "searchProjects": "Search projects...",
    "searchAgents": "Search agents...",
    "enterAgentName": "e.g., Code Assistant",
    "enterSystemPrompt": "Enter system prompt...",
    "enterDefaultTask": "e.g., Review this code for security issues",
    "enterURL": "Enter URL...",
    "searchCommands": "Search commands...",
    "enterCommand": "Enter command...",
    "enterDescription": "Enter description..."
  },
  "validation": {
    "required": "This field is required",
    "invalidEmail": "Invalid email address",
    "invalidUrl": "Invalid URL",
    "minLength": "Minimum {{count}} characters required",
    "maxLength": "Maximum {{count}} characters allowed"
  },
  "errorBoundary": {
    "somethingWentWrong": "Something went wrong",
    "errorOccurred": "An error occurred while rendering this component.",
    "errorDetails": "Error details",
    "tryAgain": "Try again"
  },
  "webview": {
    "preview": "Preview",
    "exitFullScreen": "Exit full screen (ESC)",
    "enterFullScreen": "Enter full screen",
    "enterUrl": "Enter URL...",
    "loadingPreview": "Loading preview...",
    "failedToLoad": "Failed to load preview",
    "pageCouldNotLoad": "The page could not be loaded. Please check the URL and try again.",
    "invalidUrl": "Invalid URL",
    "enterUrlToPreview": "Enter a URL to preview",
    "enterUrlDescription": "Enter a URL in the address bar above to preview a website.",
    "tryEntering": "Try entering",
    "orAnyOtherUrl": "or any other URL",
    "unknownTime": "Unknown time",
    "sessions": "Sessions",
    "selectProjectDirectory": "Select Project Directory",
    "failedToSendPrompt": "Failed to send prompt",
    "sessionOutputCopiedJsonl": "Session output copied as JSONL",
    "sessionOutputCopiedMarkdown": "Session output copied as Markdown",
    "failedToCopy": "Failed to copy",
    "forkSession": "Fork Session from Checkpoint",
    "newSessionName": "New Session Name",
    "enterNameForForkedSession": "Enter a name for the forked session"
  },
  "input": {
    "pressEnterToSend": "Press Enter to send, Shift+Enter for new line",
    "withFileAndCommandSupport": ", @ to mention files, / for commands, drag & drop or paste images",
    "composeYourPrompt": "Compose your prompt"
  },
  "relayStation": {
    "title": "Relay Stations",
    "description": "Manage Claude API relay stations for network access",
    "create": "Add Station",
    "createTitle": "Create Relay Station",
    "createFirst": "Create First Station",
    "edit": "Edit Station",
    "editTitle": "Edit Relay Station",
    "delete": "Delete Station",
    "deleteConfirm": "Are you sure you want to delete this relay station?",
    "confirmDeleteTitle": "Confirm Delete",
    "deleteSuccess": "Successfully deleted",
    "createSuccess": "Successfully created",
    "updateSuccess": "Successfully updated",
    "noStations": "No relay stations configured",
    "noStationsDesc": "Add a relay station to access Claude API through proxy services",
    "name": "Station Name",
    "namePlaceholder": "My Relay Station",
    "nameRequired": "Station name is required",
    "description": "Description",
    "descriptionPlaceholder": "Optional description for this station",
    "apiUrl": "API URL",
    "apiUrlRequired": "API URL is required",
    "adapterType": "Adapter Type",
    "authMethod": "Authentication Method",
    "systemToken": "System Token",
    "getApiKey": "Get API Key",
    "tokenPlaceholder": "Enter your API token",
    "tokenRequired": "System token is required",
    "userId": "User ID",
    "userIdPlaceholder": "Optional",
    "enabled": "Enabled",
    "testConnection": "Test Connection",
    "connectionSuccess": "Connection successful",
    "connectionFailed": "Connection test failed",
    "createSuccess": "Relay station created successfully",
    "createFailed": "Failed to create relay station",
    "updateSuccess": "Relay station updated successfully",
    "updateFailed": "Failed to update relay station",
    "deleteSuccess": "Relay station deleted successfully",
    "deleteFailed": "Failed to delete relay station",
    "loadFailed": "Failed to load relay stations",
    "custom": "Custom",
    "enabledSuccess": "Relay station enabled successfully",
    "disabledSuccess": "Relay station disabled successfully",
    "toggleEnableFailed": "Failed to toggle relay station status",
    "syncConfig": "Sync Config",
    "configPreview": "Config Preview",
    "viewJson": "View JSON",
    "configSaved": "Config saved",
    "invalidJson": "Invalid JSON format",
    "saveFailed": "Save failed",
    "flushDns": "Flush DNS",
    "flushDnsSuccess": "DNS cache flushed",
    "flushDnsFailed": "DNS flush failed",
    "syncFailed": "Failed to sync configuration",
    "currentConfig": "Current Configuration",
    "notConfigured": "Not configured",
    "configLocation": "Config file location",
    "serviceType": "Service Type",
    "taxiService": "Taxi",
    "busService": "Bus",
    "taxiServiceDesc": "Fast & Stable (share.packycode.com)",
    "busServiceDesc": "Shared Economy (packycode.com)",
    "taxiServiceNote": "Select a node or use auto-selection for optimal performance",
    "busServiceNote": "Select a node or use auto-selection for optimal performance",
    "nodeSelection": "Node Selection",
    "selectNode": "Select a node",
    "autoSelect": "Auto-select fastest",
    "autoSelectDesc": "Will automatically test and select the fastest node",
    "selectedNode": "Selected",
    "speedTest": "Speed Test",
    "testingNodes": "Testing node speeds...",
    "testing": "Testing",
    "bestNodeSelected": "Best node selected",
    "testSpeed": "Test Speed",
    "testResults": "Speed Test Results",
    "failed": "Failed",
    "testCompleted": "Speed test completed",
    "testFailed": "Speed test failed",
    "autoSelectedNode": "Auto-selected node",
    "autoSelectFailed": "Failed to auto-select node",
    "selectingBestNode": "Testing nodes to find the fastest...",
    "packycodeTokenNote": "PackyCode uses API Key authentication only",
    "enabledNote": "Enable this station to make it available for use",
    "export": "Export Config",
    "import": "Import Config",
    "exportSuccess": "Relay stations exported successfully",
    "exportFailed": "Failed to export",
    "importSuccess": "Relay stations imported successfully",
    "importFailed": "Failed to import",
    "importConfirm": "Import {{count}} relay station(s)? This will not delete existing stations.",
    "importing": "Importing...",
    "importTotal": "Total",
    "importSuccess": "Success",
    "importSkipped": "Skipped (duplicate)",
    "importFailed": "Failed",
    "allDuplicate": "All configurations already exist, nothing imported",
    "customJson": "Custom JSON Configuration",
    "customJsonOptional": "Optional",
    "customJsonNote": "Enter JSON to merge into adapter_config; clear input to remove all custom config"
  },
  "status": {
    "connected": "Connected",
    "disconnected": "Disconnected",
    "unknown": "Unknown",
    "disabled": "Disabled",
    "enabled": "Enabled"
  },
  "common": {
    "loading": "Loading...",
    "cancel": "Cancel",
    "save": "Save",
    "create": "Create",
    "edit": "Edit",
    "delete": "Delete",
    "updating": "Updating..."
  },
  "error": {
    "title": "Error"
  },
  "success": {
    "title": "Success"
  },
  "warning": {
    "title": "Warning"
  }
  ,
  "agentRun": {
    "runNotFound": "Run not found",
    "loadFailed": "Failed to load execution details",
    "executionStopped": "Execution stopped by user",
    "live": "Live",
    "stopFailed": "Failed to stop agent - it may have already finished"
  },
  "tabs": {
    "scrollLeft": "Scroll tabs left",
    "scrollRight": "Scroll tabs right",
    "browseProjectsShortcut": "Browse projects (Ctrl+T)",
    "maximumTabsReached": "Maximum tabs reached ({{count}}/20)"
  },
  "storageTab": {
    "title": "Database Storage",
    "sqlQuery": "SQL Query",
    "resetDbShort": "Reset DB",
    "selectTable": "Select a table",
    "rows": "rows",
    "searchInTable": "Search in table...",
    "newRow": "New Row",
    "actions": "Actions",
    "pagination": {
      "showing": "Showing {{from}} to {{to}} of {{total}} rows",
      "pageOf": "Page {{page}} of {{total}}"
    },
    "editRow": "Edit Row",
    "editRowDesc": "Update the values for this row in the {{table}} table.",
    "primaryKey": "Primary Key",
    "type": "Type",
    "notNull": "NOT NULL",
    "default": "Default",
    "insert": "Insert",
    "newRowDesc": "Add a new row to the {{table}} table.",
    "deleteRow": "Delete Row",
    "deleteRowConfirm": "Are you sure you want to delete this row? This action cannot be undone.",
    "resetDatabaseTitle": "Reset Database",
    "resetDatabaseDesc": "This will delete all data and recreate the database with its default structure (empty tables for agents, agent_runs, and app_settings). The database will be restored to the same state as when you first installed the app. This action cannot be undone.",
    "resetWarning": "All your agents, runs, and settings will be permanently deleted!",
    "sqlEditorTitle": "SQL Query Editor",
    "sqlEditorDesc": "Execute raw SQL queries on the database. Use with caution.",
    "sqlQueryPlaceholder": "SELECT * FROM agents LIMIT 10;",
    "queryExecuted": "Query executed successfully.",
    "rowsAffected": "rows affected.",
    "lastInsertId": "Last insert ID",
    "loadTablesFailed": "Failed to load tables",
    "loadTableDataFailed": "Failed to load table data",
    "updateRowFailed": "Failed to update row",
    "deleteRowFailed": "Failed to delete row",
    "insertRowFailed": "Failed to insert row",
    "executeSqlFailed": "Failed to execute SQL",
    "resetDatabaseFailed": "Failed to reset database",
    "resetFailed": "Reset failed: please try again.",
    "resetSuccess": "Database has been reset to its default state with empty tables (agents, agent_runs, app_settings)."
  }
}
